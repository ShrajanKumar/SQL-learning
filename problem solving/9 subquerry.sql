use hr;
#1. From the following table, write a SQL query to find those employees who receive a higher salary than the employee with ID 163. Return first name, last name.
#Sample table: employees
SELECT 
    first_name, last_name
FROM
    employees
WHERE
    salary > (SELECT 
            salary
        FROM
            employees
        WHERE
            employee_id = 163);
            
#2. From the following table, write a SQL query to find out which employees have the same designation as the employee whose ID is 169. Return first name, last name, department ID and job ID.
#Sample table: employees     
SELECT 
    first_name, last_name, job_id, department_id
FROM
    employees
WHERE
    job_id = (SELECT 
            job_id
        FROM
            employees
        WHERE
            employee_id = 169);
#3. From the following table, write a SQL query to find those employees whose salary matches the lowest salary of any of the departments. Return first name, last name and department ID.
#Sample table: employees   
SELECT 
    first_name, last_name, department_id
FROM
    employees
WHERE
    salary IN (SELECT 
            MIN(salary)
        FROM
            employees
        GROUP BY department_id); 

        
        
#4. From the following table, write a SQL query to find those employees who earn more than the average salary. Return employee ID, first name, last name.
#Sample table: employees  
SELECT 
    employee_id, first_name, last_name
FROM
    employees
WHERE
    salary > (SELECT 
            AVG(salary)
        FROM
            employees); 
            
#5. From the following table, write a SQL query to find those employees who report to that manager whose first name is ‘Payam’. Return first name, last name, employee ID and salary.
#Sample table: employees
SELECT 
    *
FROM
    employees
WHERE
    manager_id IN (SELECT 
            employee_id
        FROM
            employees
        WHERE
            first_name = 'Payam');
            
#6. From the following tables, write a SQL query to find all those employees who work in the Finance department. Return department ID, name (first), job ID and department name.            
SELECT 
    department_id,
    first_name,
    job_id,
    'Finance' AS department_name
FROM
    employees
WHERE
    department_id = (SELECT 
            department_id
        FROM
            departments
        WHERE
            department_name = 'Finance');
SELECT 
    d.department_id, e.first_name, e.job_id, d.department_name
FROM
    employees e
        JOIN
    departments d ON d.department_id = e.department_id
        AND d.department_name = 'Finance';
        
 #7 From the following table, write a SQL query to find the employee whose salary is 3000 and reporting person’s ID is 121. Return all fields.       
select* from employees where salary=3000 and manager_id=121; 

use  w3_resource;
#8. From the following tables write a SQL query to find all orders generated by London-based salespeople. Return ord_no, purch_amt, ord_date, customer_id, salesman_id.
SELECT 
    ord_no, purch_amnt, ord_date, customer_id, salesman_id
FROM
    orders
WHERE
    salesman_id IN (SELECT 
            salesman_id
        FROM
            salesman
        WHERE
            city = 'London'); 
            
#9. From the following tables write a SQL query to find all orders generated by the salespeople who may work for customers whose id is 3007. Return ord_no, purch_amt, ord_date, customer_id, salesman_id.
SELECT 
    ord_no, purch_amnt, ord_date, customer_id, salesman_id
FROM
    orders
WHERE
    salesman_id IN (SELECT 
           distinct salesman_id
        FROM
            orders
        WHERE
            customer_id = 3007);

#10  From the following tables write a SQL query to find the order values greater than the average order value of 10th October 2012. Return ord_no, purch_amt, ord_date, customer_id, salesman_id.

SELECT 
    ord_no, purch_amnt, ord_date, customer_id, salesman_id
FROM
    orders
WHERE
    purch_amnt > (SELECT 
            AVG(purch_amnt)
        FROM
            orders
        WHERE
            ord_date = '2012-10-10');
            
#11 Write a query to display all the customers whose ID is 2001 below the salesperson ID of Mc Lyon.           
SELECT 
    *
FROM
    customer
WHERE
    customer_id = (SELECT 
            salesman_id - 2001
        FROM
            salesman
        WHERE
            name = 'Mc Lyon');
            
#12  From the following tables write a SQL query to count the number of customers with grades above the average in New York City. Return grade and count
SELECT 
    grade,COUNT(*)
FROM
    customer
group by grade having
    grade > (SELECT 
            AVG(grade)
        FROM
            customer
        WHERE
            city = 'New york');
            
#13 From the following tables, write a SQL query to find those salespeople who earned the maximum commission. Return ord_no, purch_amt, ord_date, and salesman_id. 
SELECT 
    o.ord_no, o.purch_amnt, o.ord_date, o.salesman_id
FROM
    orders o,
    salesman s
WHERE
    o.salesman_id = s.salesman_id
        AND s.commission = (SELECT 
            MAX(commission)
        FROM
            salesman);
#or

    SELECT 
    ord_no, purch_amnt, ord_date, salesman_id
FROM
    orders
WHERE
    salesman_id IN (SELECT 
            salesman_id
        FROM
            salesman
        WHERE
            commission = (SELECT 
                    MAX(commission)
                FROM
                    salesman));
                    
#14  From the following tables write a SQL query to find salespeople who had more than one customer. Return salesman_id and name.  
SELECT 
    salesman_id, name
FROM
    salesman
WHERE
    salesman_id IN (SELECT 
            salesman_id
        FROM
            customer
        GROUP BY salesman_id
        HAVING COUNT(*) > 1); 
        
#15
          